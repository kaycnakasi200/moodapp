{"version":3,"sources":["Components/Header/Header.js","Components/Footer/Footer.js","Components/Home/Home.js","Components/About/About.js","Components/Signin/Signin.js","Components/Signup/Signup.js","Components/Profile/Profile.js","Components/Categories/Categories.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","style","float","Component","Footer","Home","About","Signin","for","type","name","Signup","Profile","Categories","props","fSubmit","e","preventDefault","console","log","datas","state","refs","value","address","act","data","push","index","setState","myForm","reset","focus","fRemove","i","splice","title","this","ref","placeholder","onClick","map","key","fEdit","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4b79b12.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Header.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n      return (\r\n          <div className=\"navbar\">\r\n\r\n              <Link to=\"/\" className=\"navlink\"> Home </Link>\r\n              <Link to=\"/about\" className=\"navlink\"> About </Link>\r\n              <Link to=\"/categories\"className=\"navlink\"> categories </Link>\r\n              <Link to=\"/signin\" className=\"navlink\" style={{float: 'right'}}> Signin </Link>\r\n              <Link to=\"/signup\" className=\"navlink\"  style={{float: 'right'}}> Signup </Link>\r\n              <Link to=\"/profile\" className=\"navlink\" style={{float: 'right'}}> Profile </Link>\r\n          </div>\r\n      )\r\n      }\r\n    }\r\n    export default Header;\r\n","import React, {Component} from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n      return (\r\n          <div className=\"footer\"> \r\n            <p> Copyright@2019 Design by moodapp </p>\r\n          </div>\r\n          \r\n      )\r\n      }\r\n    }\r\n    export default Footer;","import React, {Component} from 'react';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n      return (\r\n          <div>Home Page</div>\r\n      )\r\n      }\r\n    }\r\n    export default Home;","import React, {Component} from 'react';\r\nimport './About.css';\r\n\r\nclass About extends Component {\r\n    render() {\r\n      return (\r\n          <div>About Page</div>\r\n      )\r\n      }\r\n    }\r\n    export default About;","import React, { Component } from 'react';\r\nimport './Signin.css';\r\n\r\nclass Signin extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2> เข้าสู่ระบบ</h2>\r\n        <form>\r\n          <label for=\"username\"> Username\r\n          <input type=\"text\" name=\"username\" className=\"input-field\" />\r\n          </label>\r\n\r\n          <label for=\"password\"> Password\r\n           <input type=\"password\" name=\"password\" className=\"input-field\" />\r\n          </label>\r\n          \r\n          <button className=\"btn\"> Sing In </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Signin;","import React, { Component } from 'react';\r\nimport './Signup.css';\r\n\r\nclass Signup extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"myForm\">\r\n           <h2> สมัครสมาชิก</h2>\r\n          <label for=\"username\" className=\"myLabel\"> <span>Username</span>\r\n            <input type=\"text\" name=\"username\" className=\"myInput\" />\r\n          </label>\r\n\r\n          <label for=\"password\" className=\"mylabel\"> <span>Password</span>\r\n            <input type=\"password\" name=\"password\" className=\"input-field\" />\r\n          </label>\r\n\r\n          <label for=\"confirmpassword\"className=\"mylabel\"> <span> Confirm Password </span>\r\n            <input type=\"password\" name=\" confirmpassword\" className=\"input-field\" />\r\n          </label>\r\n          \r\n          <label for=\"firstname\"className=\"mylable\"><span>First Name</span>\r\n            <input type=\"text\"  name=\"firstname \" className=\"input-field\" />\r\n          </label>\r\n\r\n          <label for=\"lastname\"className=\"mylable\"> <span>Last Name</span>\r\n            <input type= \"text\" name=\" lastname\" className=\"input-field\" />\r\n          </label>\r\n\r\n          <span></span>\r\n          <button className=\"myButton\"> Sing Up </button>\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Signup;","import React, {Component} from 'react';\r\nimport './Profile.css';\r\n\r\nclass Profile extends Component {\r\n    render() {\r\n      return (\r\n          <div>Profile Page</div>\r\n      )\r\n      }\r\n    }\r\n    export default Profile;","import React, {Component} from 'react';\r\nimport './Categories.css';\r\n\r\nclass Categories extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n          title: 'Categories',\r\n          act: 0,\r\n          index: '',\r\n          datas: []\r\n        }\r\n      } \r\n\r\n      componentDidMount(){\r\n        this.refs.name.focus();\r\n      }\r\n    \r\n      fSubmit = (e) =>{\r\n        e.preventDefault();\r\n        console.log('try');\r\n    \r\n        let datas = this.state.datas;\r\n        let name = this.refs.name.value;\r\n        let address = this.refs.address.value;\r\n    \r\n        if(this.state.act === 0){   //new\r\n          let data = {\r\n            name, address\r\n          }\r\n          datas.push(data);\r\n        }else{                      //update\r\n          let index = this.state.index;\r\n          datas[index].name = name;\r\n          datas[index].address = address;\r\n        }    \r\n    \r\n        this.setState({\r\n          datas: datas,\r\n          act: 0\r\n        });\r\n    \r\n        this.refs.myForm.reset();\r\n        this.refs.name.focus();\r\n      }\r\n    \r\n\r\n      fRemove = (i) => {\r\n        let datas = this.state.datas;\r\n        datas.splice(i,1);\r\n        this.setState({\r\n          datas: datas\r\n        });\r\n    \r\n        this.refs.myForm.reset();\r\n        this.refs.name.focus();\r\n      }\r\n    \r\n\r\n\r\n    render() {\r\n        let datas = this.state.datas;\r\n      return (\r\n        <div>\r\n          <h2>{this.state.title}</h2>\r\n          <form ref=\"myForm\" className=\"myForm\">\r\n          <input type=\"text\" ref=\"name\" placeholder=\"your name\" className=\"formField\" />\r\n          <input type=\"text\" ref=\"address\" placeholder=\"your address\" className=\"formField\" />\r\n          <button onClick={(e)=>this.fSubmit(e)} className=\"myButton\">submit </button>\r\n        </form>\r\n        <pre>\r\n          {datas.map((data, i) =>\r\n            <li key={i} className=\"myList\">\r\n              {i+1}. {data.name}, {data.address}\r\n              <button onClick={()=>this.fRemove(i)} className=\"myListButton\">remove </button>\r\n              <button onClick={()=>this.fEdit(i)} className=\"myListButton\">edit </button>\r\n            </li>\r\n          )}\r\n        </pre>\r\n      \r\n        </div>\r\n      )\r\n      }\r\n    }\r\n    export default Categories;","import React, { Component } from 'react';\nimport { Route } from \"react-router-dom\";\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\nimport Home from './Components/Home/Home';\nimport About from './Components/About/About';\nimport Signin from './Components/Signin/Signin';\nimport Signup from './Components/Signup/Signup';\nimport Profile from './Components/Profile/Profile';\nimport Categories from './Components/Categories/Categories';\n\nclass App extends Component {\n  render() {\n    return(\n    <div>\n      <Header />\n      <Route exact ={true} path='/' component={Home}/>\n      <Route path='/about' component={About}/>\n      <Route path='/categories' component={Categories}/>\n      <Route path='/signin' component={Signin}/>\n      <Route path='/signup' component={Signup}/>\n      <Route path='/profile' component={Profile}/>\n      \n      <Footer />\n      </div>\n  \n  \n    \n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n<BrowserRouter>\n   <App />\n</BrowserRouter>, \ndocument.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}